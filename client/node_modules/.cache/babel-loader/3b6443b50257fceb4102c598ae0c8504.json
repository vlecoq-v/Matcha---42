{"ast":null,"code":"import _slicedToArray from \"/Users/vlv/42/matchaChat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vlv/42/matchaChat/client/src/Scenes/TempChat/TempChatContext.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst TempChatContext = React.createContext([{}, () => {}]);\n\nconst TempChatProvider = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        iMatched = _useState2[0],\n        setIMatched = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        likedMe = _useState4[0],\n        setLikedMe = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        iLiked = _useState6[0],\n        setILiked = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        visitedMe = _useState8[0],\n        setVisitedMe = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        iVisited = _useState10[0],\n        setIVisited = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        iBlocked = _useState12[0],\n        setIBlocked = _useState12[1];\n\n  useEffect(() => {\n    const api = \"http://localhost:9000/api/tempchat/affinities?userSource=\".concat(props.source.login, \"&jwt=\").concat(props.source.jwt, \"&\");\n\n    const getIMatched = async () => {\n      const result = await axios.get(\"\".concat(api, \"s=Me&r=MATCHED&t=User&w=t\"));\n      setIMatched(result.data);\n    };\n\n    const getLikedMe = async () => {\n      const result = await axios.get(\"\".concat(api, \"s=User&r=LIKED&t=me&w=s\"));\n      setLikedMe(result.data);\n    };\n\n    const getILiked = async () => {\n      const result = await axios.get(\"\".concat(api, \"s=Me&r=LIKED&t=User&w=t\"));\n      setILiked(result.data);\n    };\n\n    const getVisitedMe = async () => {\n      const result = await axios.get(\"\".concat(api, \"s=User&r=VISITED&t=me&w=s\"));\n      setVisitedMe(result.data);\n    };\n\n    const getIVisited = async () => {\n      const result = await axios.get(\"\".concat(api, \"s=Me&r=VISITED&t=User&w=t\"));\n      setIVisited(result.data);\n    };\n\n    const getIBlocked = async () => {\n      const result = await axios.get(\"\".concat(api, \"s=Me&r=BLOCKED&t=User&w=t\"));\n      setIBlocked(result.data);\n    };\n\n    getIMatched();\n    getLikedMe();\n    getILiked();\n    getVisitedMe();\n    getIVisited();\n    getIBlocked();\n  }, []); // console.log(\"TEMP CHAT CONTECT liked me\", likedMe);\n\n  return React.createElement(TempChatContext.Provider, {\n    value: [iMatched, likedMe, iLiked, visitedMe, iVisited, iBlocked],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { TempChatContext, TempChatProvider };","map":{"version":3,"sources":["/Users/vlv/42/matchaChat/client/src/Scenes/TempChat/TempChatContext.js"],"names":["React","useState","useEffect","axios","TempChatContext","createContext","TempChatProvider","props","iMatched","setIMatched","likedMe","setLikedMe","iLiked","setILiked","visitedMe","setVisitedMe","iVisited","setIVisited","iBlocked","setIBlocked","api","source","login","jwt","getIMatched","result","get","data","getLikedMe","getILiked","getVisitedMe","getIVisited","getIBlocked","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst TempChatContext = React.createContext([{}, () => {}]);\n\nconst TempChatProvider = props => {\n  const [iMatched, setIMatched] = useState([]);\n  const [likedMe, setLikedMe] = useState([]);\n  const [iLiked, setILiked] = useState([]);\n  const [visitedMe, setVisitedMe] = useState([]);\n  const [iVisited, setIVisited] = useState([]);\n  const [iBlocked, setIBlocked] = useState([]);\n\n  useEffect(() => {\n    const api = `http://localhost:9000/api/tempchat/affinities?userSource=${\n      props.source.login\n    }&jwt=${props.source.jwt}&`;\n\n    const getIMatched = async () => {\n      const result = await axios.get(`${api}s=Me&r=MATCHED&t=User&w=t`);\n      setIMatched(result.data);\n    };\n\n    const getLikedMe = async () => {\n      const result = await axios.get(`${api}s=User&r=LIKED&t=me&w=s`);\n      setLikedMe(result.data);\n    };\n\n    const getILiked = async () => {\n      const result = await axios.get(`${api}s=Me&r=LIKED&t=User&w=t`);\n      setILiked(result.data);\n    };\n\n    const getVisitedMe = async () => {\n      const result = await axios.get(`${api}s=User&r=VISITED&t=me&w=s`);\n      setVisitedMe(result.data);\n    };\n\n    const getIVisited = async () => {\n      const result = await axios.get(`${api}s=Me&r=VISITED&t=User&w=t`);\n      setIVisited(result.data);\n    };\n\n    const getIBlocked = async () => {\n      const result = await axios.get(`${api}s=Me&r=BLOCKED&t=User&w=t`);\n      setIBlocked(result.data);\n    };\n\n    getIMatched();\n    getLikedMe();\n    getILiked();\n    getVisitedMe();\n    getIVisited();\n    getIBlocked();\n  }, []);\n\n  // console.log(\"TEMP CHAT CONTECT liked me\", likedMe);\n  return (\n    <TempChatContext.Provider\n      value={[iMatched, likedMe, iLiked, visitedMe, iVisited, iBlocked]}\n    >\n      {props.children}\n    </TempChatContext.Provider>\n  );\n};\n\nexport { TempChatContext, TempChatProvider };\n"]},"metadata":{},"sourceType":"module"}