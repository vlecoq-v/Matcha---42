{"ast":null,"code":"import _slicedToArray from \"/Users/vlv/42/matchaChat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vlv/42/matchaChat/client/src/Components/UserCards/UserCard.js\";\nimport React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { UserCardContext } from \"./UserCardContext\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Button from \"@material-ui/core/Button\";\nexport default function UserCard() {\n  const classes = useStyles();\n\n  const _useContext = useContext(UserCardContext),\n        _useContext2 = _slicedToArray(_useContext, 5),\n        isLiked = _useContext2[0],\n        setLiked = _useContext2[1],\n        isBlocked = _useContext2[2],\n        setBlocked = _useContext2[3],\n        userInfo = _useContext2[4]; // console.log(userInfo);s\n\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    onClick: () => {// console.log(userInfo);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: userInfo.picLarge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      src: userInfo.picLarge,\n      className: classes.avatarPicture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }),\n    title: \"\".concat(userInfo.firstName, \" \").concat(userInfo.lastName[0], \".\"),\n    subheader: \"Last connection: \".concat(userInfo.lastConnection, \"\\n \").concat(userInfo.firstName, \" did not notice you yet \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"I love watching facebook until I forget I exists\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, userInfo.hobbies.map(hobby => React.createElement(\"li\", {\n    key: hobby,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, hobby)))), React.createElement(CardActions, {\n    disableSpacing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: setLiked,\n    className: !isLiked ? classes.isNotLikedColor : classes.isLikedColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FavoriteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: setBlocked,\n    className: !isBlocked ? classes.isNotBlockedColor : classes.isBlockedColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(HighlightOffIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(Button, {\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"FAKE ACCOUNT\"))));\n}\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345\n  },\n  isNotLikedColor: {\n    color: \"DarkGrey\",\n    \"&:hover\": {\n      backgroundColor: \"HotPink\",\n      color: \"white\"\n    }\n  },\n  isLikedColor: {\n    color: \"HotPink\"\n  },\n  isNotBlockedColor: {\n    color: \"darkGrey\",\n    \"&:hover\": {\n      backgroundColor: \"red\",\n      color: \"white\"\n    }\n  },\n  isBlockedColor: {\n    color: \"red\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  avatarPicture: {\n    // margin: 10,\n    width: 60,\n    height: 60\n  },\n  button: {\n    background: \"transparent\",\n    boxShadow: \"0px 0px 0px 0px\",\n    color: \"primary\",\n    \"&:hover\": {\n      backgroundColor: \"red\",\n      color: \"white\"\n    }\n  }\n}));","map":{"version":3,"sources":["/Users/vlv/42/matchaChat/client/src/Components/UserCards/UserCard.js"],"names":["React","useContext","makeStyles","CardMedia","CardContent","Card","CardActions","Typography","UserCardContext","CardHeader","Avatar","IconButton","FavoriteIcon","HighlightOffIcon","Button","UserCard","classes","useStyles","isLiked","setLiked","isBlocked","setBlocked","userInfo","card","media","picLarge","avatarPicture","firstName","lastName","lastConnection","hobbies","map","hobby","isNotLikedColor","isLikedColor","isNotBlockedColor","isBlockedColor","button","theme","maxWidth","color","backgroundColor","height","paddingTop","width","background","boxShadow"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { UserCardContext } from \"./UserCardContext\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function UserCard() {\n  const classes = useStyles();\n  const [isLiked, setLiked, isBlocked, setBlocked, userInfo] = useContext(\n    UserCardContext\n  );\n  // console.log(userInfo);s\n\n  return (\n    <React.Fragment>\n      <Card\n        className={classes.card}\n        onClick={() => {\n          // console.log(userInfo);\n        }}\n      >\n        <CardMedia className={classes.media} image={userInfo.picLarge} />\n        <CardHeader\n          avatar={\n            <Avatar src={userInfo.picLarge} className={classes.avatarPicture} />\n          }\n          title={`${userInfo.firstName} ${userInfo.lastName[0]}.`}\n          subheader={`Last connection: ${userInfo.lastConnection}\\n ${\n            userInfo.firstName\n          } did not notice you yet `}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {`I love watching facebook until I forget I exists`}\n          </Typography>\n          <ul>\n            {userInfo.hobbies.map(hobby => (\n              <li key={hobby}>{hobby}</li>\n            ))}\n          </ul>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            onClick={setLiked}\n            className={\n              !isLiked ? classes.isNotLikedColor : classes.isLikedColor\n            }\n          >\n            <FavoriteIcon />\n          </IconButton>\n          <IconButton\n            onClick={setBlocked}\n            className={\n              !isBlocked ? classes.isNotBlockedColor : classes.isBlockedColor\n            }\n          >\n            <HighlightOffIcon />\n          </IconButton>\n          <Button className={classes.button}>FAKE ACCOUNT</Button>\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345\n  },\n  isNotLikedColor: {\n    color: \"DarkGrey\",\n    \"&:hover\": {\n      backgroundColor: \"HotPink\",\n      color: \"white\"\n    }\n  },\n  isLikedColor: {\n    color: \"HotPink\"\n  },\n  isNotBlockedColor: {\n    color: \"darkGrey\",\n    \"&:hover\": {\n      backgroundColor: \"red\",\n      color: \"white\"\n    }\n  },\n  isBlockedColor: {\n    color: \"red\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  avatarPicture: {\n    // margin: 10,\n    width: 60,\n    height: 60\n  },\n  button: {\n    background: \"transparent\",\n    boxShadow: \"0px 0px 0px 0px\",\n    color: \"primary\",\n    \"&:hover\": {\n      backgroundColor: \"red\",\n      color: \"white\"\n    }\n  }\n}));\n"]},"metadata":{},"sourceType":"module"}