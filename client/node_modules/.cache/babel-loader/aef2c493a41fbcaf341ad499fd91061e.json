{"ast":null,"code":"import _objectSpread from \"/Users/vlv/42/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/vlv/42/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext } from \"react\";\nimport { ProfileFormContext } from \"./ProfileFormContext\";\n\nconst useProfileForm = () => {\n  const _useContext = useContext(ProfileFormContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        state = _useContext2[0],\n        setState = _useContext2[1];\n\n  function handleChange(event) {\n    event.persist(); // console.log(\"NAME\", event.target.name, \"value\", event.target.value);\n\n    setState(_objectSpread({}, state, {\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n    });\n  }\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true\n    });\n  };\n\n  const handleCancel = () => setState({\n    previewVisible: false\n  });\n\n  const handlePictures = ({\n    fileList\n  }) => setState(_objectSpread({}, state, {\n    fileList: fileList\n  }));\n\n  const trigerSubmit = event => {\n    event.preventDefault();\n    console.log(\"event\", state);\n  };\n\n  return {\n    handleChange,\n    trigerSubmit,\n    handlePictures,\n    handleCancel,\n    // handleChangePics,\n    handlePreview,\n    values: state,\n    setState\n  };\n};\n\nexport default useProfileForm;","map":{"version":3,"sources":["/Users/vlv/42/Matcha/client/src/Scenes/Profile/Components/useProfileForm.js"],"names":["useContext","ProfileFormContext","useProfileForm","state","setState","handleChange","event","persist","target","name","value","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","handlePreview","url","preview","originFileObj","previewImage","previewVisible","handleCancel","handlePictures","fileList","trigerSubmit","preventDefault","console","log","values"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,sBAAnC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA,sBACDF,UAAU,CAACC,kBAAD,CADT;AAAA;AAAA,QACpBE,KADoB;AAAA,QACbC,QADa;;AAG3B,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,OAAN,GAD2B,CAE3B;;AACAH,IAAAA,QAAQ,mBACHD,KADG;AAEN,OAACG,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAF5B,OAAR;AAID;;AAED,WAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBN,IAArB;;AACAI,MAAAA,MAAM,CAACG,MAAP,GAAgB,MAAML,OAAO,CAACE,MAAM,CAACI,MAAR,CAA7B;;AACAJ,MAAAA,MAAM,CAACK,OAAP,GAAiBC,KAAK,IAAIP,MAAM,CAACO,KAAD,CAAhC;AACD,KALM,CAAP;AAMD;;AACD,QAAMC,aAAa,GAAG,MAAMX,IAAN,IAAc;AAClC,QAAI,CAACA,IAAI,CAACY,GAAN,IAAa,CAACZ,IAAI,CAACa,OAAvB,EAAgC;AAC9Bb,MAAAA,IAAI,CAACa,OAAL,GAAe,MAAMd,SAAS,CAACC,IAAI,CAACc,aAAN,CAA9B;AACD;;AACDtB,IAAAA,QAAQ,CAAC;AACPuB,MAAAA,YAAY,EAAEf,IAAI,CAACY,GAAL,IAAYZ,IAAI,CAACa,OADxB;AAEPG,MAAAA,cAAc,EAAE;AAFT,KAAD,CAAR;AAID,GARD;;AAUA,QAAMC,YAAY,GAAG,MAAMzB,QAAQ,CAAC;AAAEwB,IAAAA,cAAc,EAAE;AAAlB,GAAD,CAAnC;;AAEA,QAAME,cAAc,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACrB3B,QAAQ,mBAAMD,KAAN;AAAa4B,IAAAA,QAAQ,EAAEA;AAAvB,KADV;;AAGA,QAAMC,YAAY,GAAG1B,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAAC2B,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBhC,KAArB;AACD,GAHD;;AAKA,SAAO;AACLE,IAAAA,YADK;AAEL2B,IAAAA,YAFK;AAGLF,IAAAA,cAHK;AAILD,IAAAA,YAJK;AAKL;AACAN,IAAAA,aANK;AAOLa,IAAAA,MAAM,EAAEjC,KAPH;AAQLC,IAAAA;AARK,GAAP;AAUD,CAlDD;;AAoDA,eAAeF,cAAf","sourcesContent":["import { useContext } from \"react\";\nimport { ProfileFormContext } from \"./ProfileFormContext\";\n\nconst useProfileForm = () => {\n  const [state, setState] = useContext(ProfileFormContext);\n\n  function handleChange(event) {\n    event.persist();\n    // console.log(\"NAME\", event.target.name, \"value\", event.target.value);\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n    setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true\n    });\n  };\n\n  const handleCancel = () => setState({ previewVisible: false });\n\n  const handlePictures = ({ fileList }) =>\n    setState({ ...state, fileList: fileList });\n\n  const trigerSubmit = event => {\n    event.preventDefault();\n    console.log(\"event\", state);\n  };\n\n  return {\n    handleChange,\n    trigerSubmit,\n    handlePictures,\n    handleCancel,\n    // handleChangePics,\n    handlePreview,\n    values: state,\n    setState\n  };\n};\n\nexport default useProfileForm;\n"]},"metadata":{},"sourceType":"module"}