{"ast":null,"code":"import _slicedToArray from \"/Users/vlv/42/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vlv/42/Matcha/client/src/Components/Navbar/Components/NotificationBell/NotificationBell.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport { AuthContext } from \"../../../../AuthContext\";\nimport axios from \"axios\";\nimport NotificationCard from \"./NotificationCard\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nconst filledNotifArray = [];\n\nfunction NotificationBell() {\n  const notifArray = [];\n\n  const _useContext = useContext(AuthContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        socketContext = _useContext2[0],\n        authContext = _useContext2[1];\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        nbNotif = _useState2[0],\n        setNbNotif = _useState2[1]; // socketContext.notifArray ? socketContext.notifArray.length : 0\n  // );\n\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        anchorEl = _useState4[0],\n        setAnchorEl = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        open = _useState6[0],\n        setOpen = _useState6[1];\n\n  const id = open ? \"simple-popper\" : undefined;\n\n  const handleNotif = e => {\n    console.log(\"onclick, fillednotif :\", filledNotifArray);\n    setAnchorEl(e.currentTarget);\n    setOpen(true);\n  };\n\n  const handleClickAway = () => {\n    // console.log(\"click away\", notifArray);\n    if (open) {\n      console.log(\"click away, notif errased\", notifArray); //   notifArray.length = 0;\n      //   filledNotifArray.length = 0;\n      //   axios.post(\"http://localhost:9000/api/notif/delete\", {\n      //     jwt: authContext.data.jwt,\n      //     uuidSource: authContext.data.uuid\n      //   });\n      //   setNbNotif(0);\n    }\n\n    setOpen(false);\n  }; // GET THE RAW DATA FROM THE BACK ONCE AND PUT IT IN NOTIFARRAY\n\n\n  useEffect(() => {\n    // console.log(\"useEffect for original db notifArray\", notifArray);\n    fetchDbNotif(notifArray); // console.log(\"useEffect for original db notifArray\", notifArray);\n  }, []);\n\n  const fetchDbNotif = async notifArray => {\n    //FIRST GET THE NOTIF IN BRUTE MODE\n    const brutNotif = await axios.get(\"http://localhost:9000/api/notif?jwt=\".concat(authContext.data.jwt, \"&uuidSource=\").concat(authContext.data.uuid, \"&category=uuid\"));\n    console.log(\"brutNotif\", brutNotif.data);\n    brutNotif.data && (await brutNotif.data.forEach(elem => {\n      notifArray.push(JSON.parse(elem));\n    }));\n    setNbNotif(notifArray.length); // console.log(\"notif array from the brut db = \", notifArray);\n  }; // FETCHs DATA FROM DB TO COMPLETE THE NOTIF ARRAY\n\n\n  useEffect(() => {\n    // console.log(\"notifArray in 2nd useEffect\", notifArray);\n    fetchData(notifArray);\n    console.log(\"use effect for augmented data: notifArray\", filledNotifArray);\n  }, [notifArray]);\n\n  const fetchData = async notifArray => {\n    // if (notifArray.length === 0) return;\n    console.log(\"notifArray in the augmented effeect\", typeof notifArray);\n    console.log(\"notifArray in the augmented effeect\", notifArray);\n    if (notifArray[0]) console.log(\"on est dans le if\");\n    console.log(\"notifArray in the augmented effeect\", notifArray[0]);\n    const promises = notifArray.map(elem => {\n      console.log(\"in the map\", elem);\n      let api = \"http://localhost:9000/api/user/findOne?jwt=\".concat(authContext.data.jwt, \"&uuidSource=\").concat(elem.uuidSource, \"&category=uuid\");\n      const responses = axios.get(api);\n      return responses;\n    });\n    console.log(\"notifArray after the map\", notifArray);\n    const results = await Promise.all(promises); // console.log(\"result before map\", results);\n\n    await results.map((elem, index) => {\n      filledNotifArray.push({\n        source: elem.data[0]._fields[0].properties,\n        info: notifArray[index]\n      });\n    }); // console.log(\"useEffect, filledNotifArray\", filledNotifArray);\n  };\n\n  socketContext.socket.on(\"newNotif\", newNotif => {\n    console.log(\"socket Notif, actual array:\", notifArray);\n    notifArray.push(newNotif);\n    setNbNotif(notifArray.length);\n    console.log(\"notifs for this socket:\", newNotif);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(ClickAwayListener, {\n    onClickAway: handleClickAway,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"show 17 new notifications\",\n    color: \"inherit\",\n    onClick: handleNotif,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    badgeContent: nbNotif,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(NotificationsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(Popper, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    transition: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, ({\n    TransitionProps\n  }) => React.createElement(Fade, Object.assign({}, TransitionProps, {\n    timeout: 350,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, filledNotifArray.map((el, index) => {\n    console.log(el, index);\n    return React.createElement(NotificationCard, {\n      notif: el,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    });\n  }))))))));\n}\n\n{\n  /* <List>\n  {menuItems.map(menuItem => (\n  <IconsAndLinks key={menuItem.text} param={menuItem} />\n  ))}\n  <Divider />\n  {[\"About us\"].map((text, index) => (\n  <ListItem button key={index}>\n    <ListItemText primary={text} />\n  </ListItem>\n  ))}\n  </List> */\n}\nexport default NotificationBell;","map":{"version":3,"sources":["/Users/vlv/42/Matcha/client/src/Components/Navbar/Components/NotificationBell/NotificationBell.js"],"names":["React","useState","useContext","useEffect","NotificationsIcon","IconButton","Popper","Fade","Paper","Badge","Typography","Divider","List","AuthContext","axios","NotificationCard","ClickAwayListener","filledNotifArray","NotificationBell","notifArray","socketContext","authContext","nbNotif","setNbNotif","anchorEl","setAnchorEl","open","setOpen","id","undefined","handleNotif","e","console","log","currentTarget","handleClickAway","fetchDbNotif","brutNotif","get","data","jwt","uuid","forEach","elem","push","JSON","parse","length","fetchData","promises","map","api","uuidSource","responses","results","Promise","all","index","source","_fields","properties","info","socket","on","newNotif","TransitionProps","el"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport { AuthContext } from \"../../../../AuthContext\";\nimport axios from \"axios\";\nimport NotificationCard from \"./NotificationCard\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nconst filledNotifArray = [];\n\nfunction NotificationBell() {\n  const notifArray = [];\n  const [socketContext, authContext] = useContext(AuthContext);\n  const [nbNotif, setNbNotif] = useState(0);\n  // socketContext.notifArray ? socketContext.notifArray.length : 0\n  // );\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const id = open ? \"simple-popper\" : undefined;\n\n  const handleNotif = e => {\n    console.log(\"onclick, fillednotif :\", filledNotifArray);\n    setAnchorEl(e.currentTarget);\n    setOpen(true);\n  };\n\n  const handleClickAway = () => {\n    // console.log(\"click away\", notifArray);\n    if (open) {\n      console.log(\"click away, notif errased\", notifArray);\n      //   notifArray.length = 0;\n      //   filledNotifArray.length = 0;\n      //   axios.post(\"http://localhost:9000/api/notif/delete\", {\n      //     jwt: authContext.data.jwt,\n      //     uuidSource: authContext.data.uuid\n      //   });\n      //   setNbNotif(0);\n    }\n    setOpen(false);\n  };\n\n  // GET THE RAW DATA FROM THE BACK ONCE AND PUT IT IN NOTIFARRAY\n  useEffect(() => {\n    // console.log(\"useEffect for original db notifArray\", notifArray);\n    fetchDbNotif(notifArray);\n    // console.log(\"useEffect for original db notifArray\", notifArray);\n  }, []);\n\n  const fetchDbNotif = async notifArray => {\n    //FIRST GET THE NOTIF IN BRUTE MODE\n    const brutNotif = await axios.get(\n      `http://localhost:9000/api/notif?jwt=${authContext.data.jwt}&uuidSource=${\n        authContext.data.uuid\n      }&category=uuid`\n    );\n    console.log(\"brutNotif\", brutNotif.data);\n\n    brutNotif.data &&\n      (await brutNotif.data.forEach(elem => {\n        notifArray.push(JSON.parse(elem));\n      }));\n    setNbNotif(notifArray.length);\n    // console.log(\"notif array from the brut db = \", notifArray);\n  };\n\n  // FETCHs DATA FROM DB TO COMPLETE THE NOTIF ARRAY\n  useEffect(() => {\n    // console.log(\"notifArray in 2nd useEffect\", notifArray);\n    fetchData(notifArray);\n    console.log(\"use effect for augmented data: notifArray\", filledNotifArray);\n  }, [notifArray]);\n\n  const fetchData = async notifArray => {\n    // if (notifArray.length === 0) return;\n    console.log(\"notifArray in the augmented effeect\", typeof notifArray);\n    console.log(\"notifArray in the augmented effeect\", notifArray);\n    if (notifArray[0]) console.log(\"on est dans le if\");\n    console.log(\"notifArray in the augmented effeect\", notifArray[0]);\n    const promises = notifArray.map(elem => {\n      console.log(\"in the map\", elem);\n      let api = `http://localhost:9000/api/user/findOne?jwt=${\n        authContext.data.jwt\n      }&uuidSource=${elem.uuidSource}&category=uuid`;\n      const responses = axios.get(api);\n      return responses;\n    });\n    console.log(\"notifArray after the map\", notifArray);\n    const results = await Promise.all(promises);\n    // console.log(\"result before map\", results);\n    await results.map((elem, index) => {\n      filledNotifArray.push({\n        source: elem.data[0]._fields[0].properties,\n        info: notifArray[index]\n      });\n    });\n    // console.log(\"useEffect, filledNotifArray\", filledNotifArray);\n  };\n\n  socketContext.socket.on(\"newNotif\", newNotif => {\n    console.log(\"socket Notif, actual array:\", notifArray);\n    notifArray.push(newNotif);\n    setNbNotif(notifArray.length);\n    console.log(\"notifs for this socket:\", newNotif);\n  });\n\n  return (\n    <div>\n      <ClickAwayListener onClickAway={handleClickAway}>\n        <IconButton\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n          onClick={handleNotif}\n        >\n          <Badge badgeContent={nbNotif} color=\"primary\">\n            <NotificationsIcon />\n          </Badge>\n\n          <Popper id={id} open={open} anchorEl={anchorEl} transition>\n            {({ TransitionProps }) => (\n              <Fade {...TransitionProps} timeout={350}>\n                <Paper>\n                  <List>\n                    {filledNotifArray.map((el, index) => {\n                      console.log(el, index);\n                      return <NotificationCard notif={el} key={index} />;\n                    })}\n                  </List>\n                </Paper>\n              </Fade>\n            )}\n          </Popper>\n        </IconButton>\n      </ClickAwayListener>\n    </div>\n  );\n}\n\n{\n  /* <List>\n{menuItems.map(menuItem => (\n  <IconsAndLinks key={menuItem.text} param={menuItem} />\n))}\n<Divider />\n{[\"About us\"].map((text, index) => (\n  <ListItem button key={index}>\n    <ListItemText primary={text} />\n  </ListItem>\n))}\n</List> */\n}\nexport default NotificationBell;\n"]},"metadata":{},"sourceType":"module"}