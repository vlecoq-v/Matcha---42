{"ast":null,"code":"import _slicedToArray from \"/Users/vlv/42/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vlv/42/Matcha/client/src/AuthContext.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nexport const AuthContext = createContext(); //HOW TO USE WHEN IMPORT\n// WE EXPORT 2 OBJECTS authContext (isauth. data ....) and socketContext\n//-->  const [socketContext, authContext] = useContext(AuthContext);\n\nexport const AuthProvider = ({\n  children\n}) => {\n  // ISAUTH IS IN CONTEXT TO MAKE THE CONTEXT REFRESH\n  // AND UPDATE SOCKET AUTOMATICALLY\n  const _useState = useState(JSON.parse(sessionStorage.isAuth || \"0\")),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAuth = _useState2[0],\n        setIsAuth = _useState2[1];\n\n  const _useState3 = useState(JSON.parse(sessionStorage.data || null)),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1];\n\n  useEffect(() => {\n    sessionStorage.isAuth = JSON.stringify(isAuth);\n    sessionStorage.data = data ? JSON.stringify(data) : \"\";\n  }, [isAuth, data]);\n  const authContext = {\n    isAuth,\n    setIsAuth,\n    data,\n    setData\n  }; // SOCKET MANAGEMENT\n\n  const socketContext = {}; // useEffect(() => {\n  // }, []);\n\n  if (data && isAuth > 0) {\n    // Websocket or polling: https://stackoverflow.com/questions/28238628/socket-io-1-x-use-websockets-only#targetText=There%20are%20two%20types%20of,actually%20initiate%20a%20webSocket%20connection.\n    const socket = socketIOClient.connect(\"http://localhost:9000\", {\n      transports: [\"websocket\"],\n      requestTimeout: 5000,\n      // IN CASE OF FIRE BREACK GLASS\n      upgrade: false,\n      query: {\n        // token: this.state.userToken\n        login: data.login,\n        uuid: data.uuid // room_id: this.state.room_id\n\n      }\n    });\n    socketContext.socket = socket; // socketContext.notifArray = notifArray;\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: [socketContext, authContext],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/vlv/42/Matcha/client/src/AuthContext.js"],"names":["React","createContext","useState","useEffect","socketIOClient","AuthContext","AuthProvider","children","JSON","parse","sessionStorage","isAuth","setIsAuth","data","setData","stringify","authContext","socketContext","socket","connect","transports","requestTimeout","upgrade","query","login","uuid"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC,C,CAEP;AACA;AACA;;AAEA,OAAO,MAAMK,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C;AACA;AAF4C,oBAGhBL,QAAQ,CAClCM,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,MAAf,IAAyB,GAApC,CADkC,CAHQ;AAAA;AAAA,QAGrCA,MAHqC;AAAA,QAG7BC,SAH6B;;AAAA,qBAMpBV,QAAQ,CAACM,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACG,IAAf,IAAuB,IAAlC,CAAD,CANY;AAAA;AAAA,QAMrCA,IANqC;AAAA,QAM/BC,OAN+B;;AAQ5CX,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,cAAc,CAACC,MAAf,GAAwBH,IAAI,CAACO,SAAL,CAAeJ,MAAf,CAAxB;AACAD,IAAAA,cAAc,CAACG,IAAf,GAAsBA,IAAI,GAAGL,IAAI,CAACO,SAAL,CAAeF,IAAf,CAAH,GAA0B,EAApD;AACD,GAHQ,EAGN,CAACF,MAAD,EAASE,IAAT,CAHM,CAAT;AAKA,QAAMG,WAAW,GAAG;AAClBL,IAAAA,MADkB;AAElBC,IAAAA,SAFkB;AAGlBC,IAAAA,IAHkB;AAIlBC,IAAAA;AAJkB,GAApB,CAb4C,CAoB5C;;AACA,QAAMG,aAAa,GAAG,EAAtB,CArB4C,CAsB5C;AACA;;AAEA,MAAIJ,IAAI,IAAIF,MAAM,GAAG,CAArB,EAAwB;AACtB;AACA,UAAMO,MAAM,GAAGd,cAAc,CAACe,OAAf,CAAuB,uBAAvB,EAAgD;AAC7DC,MAAAA,UAAU,EAAE,CAAC,WAAD,CADiD;AAE7DC,MAAAA,cAAc,EAAE,IAF6C;AAEvC;AACtBC,MAAAA,OAAO,EAAE,KAHoD;AAI7DC,MAAAA,KAAK,EAAE;AACL;AACAC,QAAAA,KAAK,EAAEX,IAAI,CAACW,KAFP;AAGLC,QAAAA,IAAI,EAAEZ,IAAI,CAACY,IAHN,CAIL;;AAJK;AAJsD,KAAhD,CAAf;AAYAR,IAAAA,aAAa,CAACC,MAAd,GAAuBA,MAAvB,CAdsB,CAetB;AACD;;AAED,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACD,aAAD,EAAgBD,WAAhB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QADH,CADF;AAKD,CAhDM","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nexport const AuthContext = createContext();\n\n//HOW TO USE WHEN IMPORT\n// WE EXPORT 2 OBJECTS authContext (isauth. data ....) and socketContext\n//-->  const [socketContext, authContext] = useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  // ISAUTH IS IN CONTEXT TO MAKE THE CONTEXT REFRESH\n  // AND UPDATE SOCKET AUTOMATICALLY\n  const [isAuth, setIsAuth] = useState(\n    JSON.parse(sessionStorage.isAuth || \"0\")\n  );\n  const [data, setData] = useState(JSON.parse(sessionStorage.data || null));\n\n  useEffect(() => {\n    sessionStorage.isAuth = JSON.stringify(isAuth);\n    sessionStorage.data = data ? JSON.stringify(data) : \"\";\n  }, [isAuth, data]);\n\n  const authContext = {\n    isAuth,\n    setIsAuth,\n    data,\n    setData\n  };\n\n  // SOCKET MANAGEMENT\n  const socketContext = {};\n  // useEffect(() => {\n  // }, []);\n\n  if (data && isAuth > 0) {\n    // Websocket or polling: https://stackoverflow.com/questions/28238628/socket-io-1-x-use-websockets-only#targetText=There%20are%20two%20types%20of,actually%20initiate%20a%20webSocket%20connection.\n    const socket = socketIOClient.connect(\"http://localhost:9000\", {\n      transports: [\"websocket\"],\n      requestTimeout: 5000, // IN CASE OF FIRE BREACK GLASS\n      upgrade: false,\n      query: {\n        // token: this.state.userToken\n        login: data.login,\n        uuid: data.uuid\n        // room_id: this.state.room_id\n      }\n    });\n\n    socketContext.socket = socket;\n    // socketContext.notifArray = notifArray;\n  }\n\n  return (\n    <AuthContext.Provider value={[socketContext, authContext]}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}