{"ast":null,"code":"import _slicedToArray from \"/Users/vlv/42/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vlv/42/Matcha/client/src/Scenes/Social/Social.js\";\nimport React, { useState } from \"react\"; // import { socket } from \"../../Components/Navbar/NavBar\";\n\nimport { Formik } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\"; // envoyer message dans une room en instant,\n// Listen les event dansune room en instant,\n// --> avoir le nom des rooms pre-definis dans le chat\n// --> join a chaque clique et listen et emmetre des messages depuis ca\n// Envoyer et trouver les vieux messages\n\nconst Social = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 1),\n        oldMessages = _useState2[0]; //setOldMessages\n\n\n  const initialValues = {\n    msg: \"\"\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, oldMessages.map(msg => {\n    return React.createElement(\"li\", {\n      key: msg.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, msg.content, \" \", msg.h, \":\", msg.m);\n  })), React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setSubmitting(true); // socket.emit(\"chat message\", values.msg);\n\n      values.msg = \"\";\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props => {\n    const values = props.values,\n          handleChange = props.handleChange,\n          handleSubmit = props.handleSubmit;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"message\",\n      name: \"msg\",\n      onChange: handleChange,\n      value: values.msg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Send\"));\n  }));\n};\n\nexport default Social;","map":{"version":3,"sources":["/Users/vlv/42/Matcha/client/src/Scenes/Social/Social.js"],"names":["React","useState","Formik","TextField","Button","Social","oldMessages","initialValues","msg","map","content","h","m","values","setSubmitting","props","handleChange","handleSubmit"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA,oBACGJ,QAAQ,CAAC,EAAD,CADX;AAAA;AAAA,QACZK,WADY,kBACiB;;;AACpC,QAAMC,aAAa,GAAG;AACpBC,IAAAA,GAAG,EAAE;AADe,GAAtB;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,WAAW,CAACG,GAAZ,CAAgBD,GAAG,IAAI;AACtB,WACE;AAAI,MAAA,GAAG,EAAEA,GAAG,CAACE,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,GAAG,CAACE,OADP,OACiBF,GAAG,CAACG,CADrB,OACyBH,GAAG,CAACI,CAD7B,CADF;AAKD,GANA,CADH,CADF,EAUE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEL,aADjB;AAEE,IAAA,QAAQ,EAAE,CAACM,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACvCA,MAAAA,aAAa,CAAC,IAAD,CAAb,CADuC,CAEvC;;AACAD,MAAAA,MAAM,CAACL,GAAP,GAAa,EAAb;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGO,KAAK,IAAI;AAAA,UACAF,MADA,GACuCE,KADvC,CACAF,MADA;AAAA,UACQG,YADR,GACuCD,KADvC,CACQC,YADR;AAAA,UACsBC,YADtB,GACuCF,KADvC,CACsBE,YADtB;AAER,WACE;AAAM,MAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,QAAQ,EAAED,YAHZ;AAIE,MAAA,KAAK,EAAEH,MAAM,CAACL,GAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF;AAWD,GArBH,CAVF,CADF;AAoCD,CA1CD;;AA4CA,eAAeH,MAAf","sourcesContent":["import React, { useState } from \"react\";\n// import { socket } from \"../../Components/Navbar/NavBar\";\nimport { Formik } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\n// envoyer message dans une room en instant,\n// Listen les event dansune room en instant,\n// --> avoir le nom des rooms pre-definis dans le chat\n// --> join a chaque clique et listen et emmetre des messages depuis ca\n\n// Envoyer et trouver les vieux messages\n\nconst Social = () => {\n  const [oldMessages] = useState([]); //setOldMessages\n  const initialValues = {\n    msg: \"\"\n  };\n\n  return (\n    <div>\n      <ul>\n        {oldMessages.map(msg => {\n          return (\n            <li key={msg.content}>\n              {msg.content} {msg.h}:{msg.m}\n            </li>\n          );\n        })}\n      </ul>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values, { setSubmitting }) => {\n          setSubmitting(true);\n          // socket.emit(\"chat message\", values.msg);\n          values.msg = \"\";\n        }}\n      >\n        {props => {\n          const { values, handleChange, handleSubmit } = props;\n          return (\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label=\"message\"\n                name=\"msg\"\n                onChange={handleChange}\n                value={values.msg}\n              />\n              <Button type=\"submit\">Send</Button>\n            </form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Social;\n"]},"metadata":{},"sourceType":"module"}