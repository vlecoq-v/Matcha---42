{"ast":null,"code":"import _slicedToArray from \"/Users/vlv/42/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vlv/42/Matcha/client/src/Components/Navbar/Components/NotificationBell/NotificationBell.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport { AuthContext } from \"../../../../AuthContext\";\nimport axios from \"axios\";\nimport NotificationCard from \"./NotificationCard\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nconst filledNotifArray = [];\n\nfunction NotificationBell() {\n  const notifArray = [];\n  console.log(\"type of notif array\", typeof notifArray);\n\n  const _useContext = useContext(AuthContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        socketContext = _useContext2[0],\n        authContext = _useContext2[1];\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        nbNotif = _useState2[0],\n        setNbNotif = _useState2[1]; // socketContext.notifArray ? socketContext.notifArray.length : 0\n  // );\n\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        anchorEl = _useState4[0],\n        setAnchorEl = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        open = _useState6[0],\n        setOpen = _useState6[1];\n\n  const id = open ? \"simple-popper\" : undefined;\n\n  const handleNotif = e => {\n    console.log(\"onclick, fillednotif :\", filledNotifArray);\n    setAnchorEl(e.currentTarget);\n    setOpen(true);\n  };\n\n  const handleClickAway = () => {\n    console.log(\"click away\", notifArray);\n\n    if (open) {\n      console.log(\"click away, notif errased\", notifArray);\n      notifArray.length = 0;\n      filledNotifArray.length = 0;\n      axios.post(\"http://localhost:9000/api/notif/delete\", {\n        jwt: authContext.data.jwt,\n        uuidSource: authContext.data.uuid\n      });\n      setNbNotif(0);\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect for original db notif\", typeof notifArray, notifArray);\n    fetchDbNotif();\n    console.log(\"useEffect for original db notif\", typeof notifArray);\n  }, []);\n\n  const fetchDbNotif = async () => {\n    //FIRST GET THE NOTIF IN BRUTE MODE\n    const brutNotif = await axios.get(\"http://localhost:9000/api/notif?jwt=\".concat(authContext.data.jwt, \"&uuidSource=\").concat(authContext.data.uuid, \"&category=uuid\")); // console.log(\"brutNotif\", brutNotif.data);\n\n    await brutNotif.data.forEach(elem => {\n      notifArray.push(JSON.parse(elem));\n    });\n    setNbNotif(notifArray.length); // console.log(\"notif array from the brut db = \", notifArray);\n  };\n\n  useEffect(() => {\n    fetchData();\n    console.log(\"use effect for augmented data: notifArray\", filledNotifArray);\n  }, [notifArray]);\n\n  const fetchData = async _ => {\n    // if (notifArray.length === 0) return;\n    console.log(\"notifArray in the augmented effeect\", typeof notifArray);\n    const promises = notifArray.map(elem => {\n      console.log(elem);\n      let api = \"http://localhost:9000/api/user/findOne?jwt=\".concat(authContext.data.jwt, \"&uuidSource=\").concat(elem.uuidSource, \"&category=uuid\");\n      const responses = axios.get(api);\n      return responses;\n    });\n    const results = await Promise.all(promises);\n    console.log(\"result before map\", results);\n    await results.map((elem, index) => {\n      filledNotifArray.push({\n        source: elem.data[0]._fields[0].properties,\n        info: notifArray[index]\n      });\n    }); // console.log(\"useEffect, filledNotifArray\", filledNotifArray);\n  };\n\n  socketContext.socket.on(\"newNotif\", newNotif => {\n    console.log(\"socket Notif, actual array:\", notifArray);\n    notifArray.push(newNotif);\n    setNbNotif(notifArray.length);\n    console.log(\"notifs for this socket:\", newNotif);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(ClickAwayListener, {\n    onClickAway: handleClickAway,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"show 17 new notifications\",\n    color: \"inherit\",\n    onClick: handleNotif,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    badgeContent: nbNotif,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(NotificationsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(Popper, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    transition: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, ({\n    TransitionProps\n  }) => React.createElement(Fade, Object.assign({}, TransitionProps, {\n    timeout: 350,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, filledNotifArray.map((el, index) => {\n    console.log(el, index);\n    return React.createElement(NotificationCard, {\n      notif: el,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    });\n  }))))))));\n}\n\n{\n  /* <List>\n  {menuItems.map(menuItem => (\n  <IconsAndLinks key={menuItem.text} param={menuItem} />\n  ))}\n  <Divider />\n  {[\"About us\"].map((text, index) => (\n  <ListItem button key={index}>\n    <ListItemText primary={text} />\n  </ListItem>\n  ))}\n  </List> */\n}\nexport default NotificationBell;","map":{"version":3,"sources":["/Users/vlv/42/Matcha/client/src/Components/Navbar/Components/NotificationBell/NotificationBell.js"],"names":["React","useState","useContext","useEffect","NotificationsIcon","IconButton","Popper","Fade","Paper","Badge","Typography","Divider","List","AuthContext","axios","NotificationCard","ClickAwayListener","filledNotifArray","NotificationBell","notifArray","console","log","socketContext","authContext","nbNotif","setNbNotif","anchorEl","setAnchorEl","open","setOpen","id","undefined","handleNotif","e","currentTarget","handleClickAway","length","post","jwt","data","uuidSource","uuid","fetchDbNotif","brutNotif","get","forEach","elem","push","JSON","parse","fetchData","_","promises","map","api","responses","results","Promise","all","index","source","_fields","properties","info","socket","on","newNotif","TransitionProps","el"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport { AuthContext } from \"../../../../AuthContext\";\nimport axios from \"axios\";\nimport NotificationCard from \"./NotificationCard\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nconst filledNotifArray = [];\n\nfunction NotificationBell() {\n  const notifArray = [];\n  console.log(\"type of notif array\", typeof notifArray);\n  const [socketContext, authContext] = useContext(AuthContext);\n  const [nbNotif, setNbNotif] = useState(0);\n  // socketContext.notifArray ? socketContext.notifArray.length : 0\n  // );\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const id = open ? \"simple-popper\" : undefined;\n\n  const handleNotif = e => {\n    console.log(\"onclick, fillednotif :\", filledNotifArray);\n    setAnchorEl(e.currentTarget);\n    setOpen(true);\n  };\n\n  const handleClickAway = () => {\n    console.log(\"click away\", notifArray);\n    if (open) {\n      console.log(\"click away, notif errased\", notifArray);\n      notifArray.length = 0;\n      filledNotifArray.length = 0;\n      axios.post(\"http://localhost:9000/api/notif/delete\", {\n        jwt: authContext.data.jwt,\n        uuidSource: authContext.data.uuid\n      });\n      setNbNotif(0);\n    }\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    console.log(\n      \"useEffect for original db notif\",\n      typeof notifArray,\n      notifArray\n    );\n    fetchDbNotif();\n    console.log(\"useEffect for original db notif\", typeof notifArray);\n  }, []);\n\n  const fetchDbNotif = async () => {\n    //FIRST GET THE NOTIF IN BRUTE MODE\n    const brutNotif = await axios.get(\n      `http://localhost:9000/api/notif?jwt=${authContext.data.jwt}&uuidSource=${\n        authContext.data.uuid\n      }&category=uuid`\n    );\n    // console.log(\"brutNotif\", brutNotif.data);\n    await brutNotif.data.forEach(elem => {\n      notifArray.push(JSON.parse(elem));\n    });\n    setNbNotif(notifArray.length);\n    // console.log(\"notif array from the brut db = \", notifArray);\n  };\n\n  useEffect(() => {\n    fetchData();\n    console.log(\"use effect for augmented data: notifArray\", filledNotifArray);\n  }, [notifArray]);\n\n  const fetchData = async _ => {\n    // if (notifArray.length === 0) return;\n    console.log(\"notifArray in the augmented effeect\", typeof notifArray);\n    const promises = notifArray.map(elem => {\n      console.log(elem);\n      let api = `http://localhost:9000/api/user/findOne?jwt=${\n        authContext.data.jwt\n      }&uuidSource=${elem.uuidSource}&category=uuid`;\n      const responses = axios.get(api);\n      return responses;\n    });\n    const results = await Promise.all(promises);\n    console.log(\"result before map\", results);\n    await results.map((elem, index) => {\n      filledNotifArray.push({\n        source: elem.data[0]._fields[0].properties,\n        info: notifArray[index]\n      });\n    });\n    // console.log(\"useEffect, filledNotifArray\", filledNotifArray);\n  };\n\n  socketContext.socket.on(\"newNotif\", newNotif => {\n    console.log(\"socket Notif, actual array:\", notifArray);\n    notifArray.push(newNotif);\n    setNbNotif(notifArray.length);\n    console.log(\"notifs for this socket:\", newNotif);\n  });\n\n  return (\n    <div>\n      <ClickAwayListener onClickAway={handleClickAway}>\n        <IconButton\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n          onClick={handleNotif}\n        >\n          <Badge badgeContent={nbNotif} color=\"primary\">\n            <NotificationsIcon />\n          </Badge>\n\n          <Popper id={id} open={open} anchorEl={anchorEl} transition>\n            {({ TransitionProps }) => (\n              <Fade {...TransitionProps} timeout={350}>\n                <Paper>\n                  <List>\n                    {filledNotifArray.map((el, index) => {\n                      console.log(el, index);\n                      return <NotificationCard notif={el} key={index} />;\n                    })}\n                  </List>\n                </Paper>\n              </Fade>\n            )}\n          </Popper>\n        </IconButton>\n      </ClickAwayListener>\n    </div>\n  );\n}\n\n{\n  /* <List>\n{menuItems.map(menuItem => (\n  <IconsAndLinks key={menuItem.text} param={menuItem} />\n))}\n<Divider />\n{[\"About us\"].map((text, index) => (\n  <ListItem button key={index}>\n    <ListItemText primary={text} />\n  </ListItem>\n))}\n</List> */\n}\nexport default NotificationBell;\n"]},"metadata":{},"sourceType":"module"}