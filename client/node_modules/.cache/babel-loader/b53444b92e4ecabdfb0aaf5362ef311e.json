{"ast":null,"code":"import _slicedToArray from \"/Users/vlv/42/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vlv/42/Matcha/client/src/Scenes/TempChat/Components/ChatApp/ChatApp.js\";\nimport React, { useContext } from \"react\";\nimport Messages from \"./Components/Messages\";\nimport ChatInput from \"./Components/ChatInput\";\nimport { AuthContext } from \"../../../../AuthContext\";\nimport \"./ChatApp.css\";\nimport { TempChatContext } from \"../../TempChatContext\"; // Inspiration https://medium.com/@coderacademy/you-can-build-an-fb-messenger-style-chat-app-with-reactjs-heres-how-intermediate-211b523838ad\n\nconst ChatApp = () => {\n  const _useContext = useContext(AuthContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        socketContext = _useContext2[0],\n        authContext = _useContext2[1];\n\n  const _useContext3 = useContext(TempChatContext),\n        _useContext4 = _slicedToArray(_useContext3, 1),\n        chatAppContext = _useContext4[0];\n\n  const sendHandler = content => {\n    let msg = {\n      jwt: authContext.data.jwt,\n      uuidSource: authContext.data.uuid,\n      content: content\n    }; // console.log(\"chatMessage sent from client\");\n\n    socketContext.socket.emit(\"chatMessage\", msg);\n  };\n\n  socketContext.socket.off(\"chatMessage\"); //unsubscribe to all previous listeners in case the context made reruns\n\n  socketContext.socket.on(\"chatMessage\", msg => {\n    let newMessage = {\n      uuidSource: msg.uuidSource,\n      target: msg.target,\n      jwt: authContext.data.jwt,\n      content: msg.content,\n      h: msg.h,\n      m: msg.m\n    }; // console.log(\"front sends message to controller\", msg, authContext.data.jwt);\n\n    chatAppContext.setMessages(chatAppContext.messages.concat(newMessage));\n  });\n  return React.createElement(\"div\", {\n    className: \"ChatAppContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"CHAT TITLE\"), React.createElement(Messages, {\n    className: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(ChatInput, {\n    onSend: sendHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default ChatApp;","map":{"version":3,"sources":["/Users/vlv/42/Matcha/client/src/Scenes/TempChat/Components/ChatApp/ChatApp.js"],"names":["React","useContext","Messages","ChatInput","AuthContext","TempChatContext","ChatApp","socketContext","authContext","chatAppContext","sendHandler","content","msg","jwt","data","uuidSource","uuid","socket","emit","off","on","newMessage","target","h","m","setMessages","messages","concat"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,eAAP;AACA,SAASC,eAAT,QAAgC,uBAAhC,C,CAEA;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA,sBACiBL,UAAU,CAACG,WAAD,CAD3B;AAAA;AAAA,QACbG,aADa;AAAA,QACEC,WADF;;AAAA,uBAEKP,UAAU,CAACI,eAAD,CAFf;AAAA;AAAA,QAEbI,cAFa;;AAIpB,QAAMC,WAAW,GAAGC,OAAO,IAAI;AAC7B,QAAIC,GAAG,GAAG;AACRC,MAAAA,GAAG,EAAEL,WAAW,CAACM,IAAZ,CAAiBD,GADd;AAERE,MAAAA,UAAU,EAAEP,WAAW,CAACM,IAAZ,CAAiBE,IAFrB;AAGRL,MAAAA,OAAO,EAAEA;AAHD,KAAV,CAD6B,CAM7B;;AACAJ,IAAAA,aAAa,CAACU,MAAd,CAAqBC,IAArB,CAA0B,aAA1B,EAAyCN,GAAzC;AACD,GARD;;AAUAL,EAAAA,aAAa,CAACU,MAAd,CAAqBE,GAArB,CAAyB,aAAzB,EAdoB,CAcqB;;AACzCZ,EAAAA,aAAa,CAACU,MAAd,CAAqBG,EAArB,CAAwB,aAAxB,EAAuCR,GAAG,IAAI;AAC5C,QAAIS,UAAU,GAAG;AACfN,MAAAA,UAAU,EAAEH,GAAG,CAACG,UADD;AAEfO,MAAAA,MAAM,EAAEV,GAAG,CAACU,MAFG;AAGfT,MAAAA,GAAG,EAAEL,WAAW,CAACM,IAAZ,CAAiBD,GAHP;AAIfF,MAAAA,OAAO,EAAEC,GAAG,CAACD,OAJE;AAKfY,MAAAA,CAAC,EAAEX,GAAG,CAACW,CALQ;AAMfC,MAAAA,CAAC,EAAEZ,GAAG,CAACY;AANQ,KAAjB,CAD4C,CAS5C;;AACAf,IAAAA,cAAc,CAACgB,WAAf,CAA2BhB,cAAc,CAACiB,QAAf,CAAwBC,MAAxB,CAA+BN,UAA/B,CAA3B;AACD,GAXD;AAaA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEX,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAnCD;;AAqCA,eAAeJ,OAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport Messages from \"./Components/Messages\";\nimport ChatInput from \"./Components/ChatInput\";\nimport { AuthContext } from \"../../../../AuthContext\";\nimport \"./ChatApp.css\";\nimport { TempChatContext } from \"../../TempChatContext\";\n\n// Inspiration https://medium.com/@coderacademy/you-can-build-an-fb-messenger-style-chat-app-with-reactjs-heres-how-intermediate-211b523838ad\nconst ChatApp = () => {\n  const [socketContext, authContext] = useContext(AuthContext);\n  const [chatAppContext] = useContext(TempChatContext);\n\n  const sendHandler = content => {\n    let msg = {\n      jwt: authContext.data.jwt,\n      uuidSource: authContext.data.uuid,\n      content: content\n    };\n    // console.log(\"chatMessage sent from client\");\n    socketContext.socket.emit(\"chatMessage\", msg);\n  };\n\n  socketContext.socket.off(\"chatMessage\"); //unsubscribe to all previous listeners in case the context made reruns\n  socketContext.socket.on(\"chatMessage\", msg => {\n    let newMessage = {\n      uuidSource: msg.uuidSource,\n      target: msg.target,\n      jwt: authContext.data.jwt,\n      content: msg.content,\n      h: msg.h,\n      m: msg.m\n    };\n    // console.log(\"front sends message to controller\", msg, authContext.data.jwt);\n    chatAppContext.setMessages(chatAppContext.messages.concat(newMessage));\n  });\n\n  return (\n    <div className=\"ChatAppContainer\">\n      <h3>CHAT TITLE</h3>\n      <Messages className=\"messages\" />\n      <ChatInput onSend={sendHandler} />\n    </div>\n  );\n};\n\nexport default ChatApp;\n"]},"metadata":{},"sourceType":"module"}