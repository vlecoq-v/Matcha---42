{"ast":null,"code":"import _slicedToArray from \"/Users/vlv/42/Matcha/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vlv/42/Matcha/client/src/Scenes/TempChat/TempChatContext.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../AuthContext\";\nconst TempChatContext = React.createContext([{}, () => {}]);\n\nconst TempChatProvider = props => {\n  const _useContext = useContext(AuthContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        socketContext = _useContext2[0],\n        authContext = _useContext2[1];\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        chatTarget = _useState2[0],\n        setChatTarget = _useState2[1];\n\n  const _useState3 = useState([{\n    // uuidSource: \"\",\n    // h: \"\",\n    // m: \"\",\n    content: \"Welcome to the chat, click on an icon to get a conversation going\"\n  }]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        messages = _useState4[0],\n        setMessages = _useState4[1];\n\n  const fetchData = async () => {\n    const result = await axios(\"http://localhost:9000/api/chatMessages?uuidSource=\".concat(authContext.data.uuid, \"&target=\").concat(chatTarget.uuid, \"&jwt=\").concat(authContext.data.jwt)); // console.log(\"PREVIOUS MESSAGES LOADED\", result.data);\n\n    result.data && setMessages(result.data);\n  };\n\n  useEffect(() => {\n    socketContext.socket.emit(\"joinRoom\", chatTarget);\n    chatTarget.uuid && fetchData(); // console.log(\"CHATTARGET WAS CHANGED --> JOINING ROOM: \", chatTarget.uuid);\n  }, [chatTarget.uuid]);\n  const chatAppContext = {\n    chatTarget,\n    setChatTarget,\n    messages,\n    setMessages\n  };\n  return React.createElement(TempChatContext.Provider, {\n    value: [chatAppContext],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { TempChatContext, TempChatProvider };","map":{"version":3,"sources":["/Users/vlv/42/Matcha/client/src/Scenes/TempChat/TempChatContext.js"],"names":["React","useState","useEffect","useContext","axios","AuthContext","TempChatContext","createContext","TempChatProvider","props","socketContext","authContext","chatTarget","setChatTarget","content","messages","setMessages","fetchData","result","data","uuid","jwt","socket","emit","chatAppContext","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,MAAMC,eAAe,GAAGN,KAAK,CAACO,aAAN,CAAoB,CAAC,EAAD,EAAK,MAAM,CAAE,CAAb,CAApB,CAAxB;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAAA,sBACKN,UAAU,CAACE,WAAD,CADf;AAAA;AAAA,QACzBK,aADyB;AAAA,QACVC,WADU;;AAAA,oBAEIV,QAAQ,CAAC,EAAD,CAFZ;AAAA;AAAA,QAEzBW,UAFyB;AAAA,QAEbC,aAFa;;AAAA,qBAGAZ,QAAQ,CAAC,CACvC;AACE;AACA;AACA;AACAa,IAAAA,OAAO,EACL;AALJ,GADuC,CAAD,CAHR;AAAA;AAAA,QAGzBC,QAHyB;AAAA,QAGfC,WAHe;;AAahC,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,MAAM,GAAG,MAAMd,KAAK,6DAEtBO,WAAW,CAACQ,IAAZ,CAAiBC,IAFK,qBAGbR,UAAU,CAACQ,IAHE,kBAGUT,WAAW,CAACQ,IAAZ,CAAiBE,GAH3B,EAA1B,CAD4B,CAM5B;;AACAH,IAAAA,MAAM,CAACC,IAAP,IAAeH,WAAW,CAACE,MAAM,CAACC,IAAR,CAA1B;AACD,GARD;;AAUAjB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,aAAa,CAACY,MAAd,CAAqBC,IAArB,CAA0B,UAA1B,EAAsCX,UAAtC;AACAA,IAAAA,UAAU,CAACQ,IAAX,IAAmBH,SAAS,EAA5B,CAFc,CAGd;AACD,GAJQ,EAIN,CAACL,UAAU,CAACQ,IAAZ,CAJM,CAAT;AAMA,QAAMI,cAAc,GAAG;AACrBZ,IAAAA,UADqB;AAErBC,IAAAA,aAFqB;AAGrBE,IAAAA,QAHqB;AAIrBC,IAAAA;AAJqB,GAAvB;AAOA,SACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE,CAACQ,cAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,KAAK,CAACgB,QADT,CADF;AAKD,CAzCD;;AA2CA,SAASnB,eAAT,EAA0BE,gBAA1B","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../AuthContext\";\n\nconst TempChatContext = React.createContext([{}, () => {}]);\n\nconst TempChatProvider = props => {\n  const [socketContext, authContext] = useContext(AuthContext);\n  const [chatTarget, setChatTarget] = useState({});\n  const [messages, setMessages] = useState([\n    {\n      // uuidSource: \"\",\n      // h: \"\",\n      // m: \"\",\n      content:\n        \"Welcome to the chat, click on an icon to get a conversation going\"\n    }\n  ]);\n\n  const fetchData = async () => {\n    const result = await axios(\n      `http://localhost:9000/api/chatMessages?uuidSource=${\n        authContext.data.uuid\n      }&target=${chatTarget.uuid}&jwt=${authContext.data.jwt}`\n    );\n    // console.log(\"PREVIOUS MESSAGES LOADED\", result.data);\n    result.data && setMessages(result.data);\n  };\n\n  useEffect(() => {\n    socketContext.socket.emit(\"joinRoom\", chatTarget);\n    chatTarget.uuid && fetchData();\n    // console.log(\"CHATTARGET WAS CHANGED --> JOINING ROOM: \", chatTarget.uuid);\n  }, [chatTarget.uuid]);\n\n  const chatAppContext = {\n    chatTarget,\n    setChatTarget,\n    messages,\n    setMessages\n  };\n\n  return (\n    <TempChatContext.Provider value={[chatAppContext]}>\n      {props.children}\n    </TempChatContext.Provider>\n  );\n};\n\nexport { TempChatContext, TempChatProvider };\n"]},"metadata":{},"sourceType":"module"}